# <type>: <subject> (50 chars)
# |<----  Using a maximum of 50 characters  ---->|

# <body> (72 chars per line)
# |<----   Try to limit each line to a maximum of 72 characters   ---->|

# CODEX-NOTES:
# - Pattern used:
# - Confidence handling:
# - Test coverage:
# - Performance impact:
#
# Co-Authored-By: Codex <noreply@openai.com>

# --- COMMIT MESSAGE GUIDE ---
#
# Type can be:
#   feat     - New feature
#   fix      - Bug fix
#   docs     - Documentation only changes
#   style    - Code style changes (formatting, missing semicolons, etc)
#   refactor - Code change that neither fixes a bug nor adds a feature
#   perf     - Performance improvements
#   test     - Adding missing tests or correcting existing tests
#   chore    - Changes to build process or auxiliary tools
#
# Subject should:
#   - Use imperative mood ("Add feature" not "Added feature")
#   - Not capitalize first letter
#   - Not end with period
#
# Body should:
#   - Explain what and why vs. how
#   - Include motivation for change
#   - Contrast with previous behavior
#
# CODEX-NOTES should document:
#   - Which design pattern from src/patterns/ was followed
#   - How confidence scores are handled in new code
#   - What tests were added/modified
#   - Any performance implications
#
# Example:
# ========
# feat: add earnings risk check to prevent assignment surprises
#
# Unity stock moves Â±15-25% on earnings announcements. This change
# adds a risk check that prevents opening positions with expiries
# within 7 days of earnings dates.
#
# The check integrates with existing risk limits and returns a
# confidence score based on earnings date certainty.
#
# CODEX-NOTES:
# - Pattern used: risk check pattern from add_new_risk_check.py
# - Confidence handling: 0.95 for known dates, 0.8 for estimates
# - Test coverage: Added 5 property tests, 3 integration tests
# - Performance impact: <0.1ms per check (cached earnings dates)
#
# Co-Authored-By: Codex <noreply@openai.com>
