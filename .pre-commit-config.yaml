repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
      - id: check-merge-conflict
      - id: check-toml
      - id: debug-statements
      - id: mixed-line-ending

  - repo: https://github.com/psf/black
    rev: 24.2.0
    hooks:
      - id: black
        language_version: python3.12
        args: [--line-length=100]

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=100]

  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: [--max-line-length=100, --extend-ignore=E203]
        additional_dependencies:
          - flake8-docstrings
          - flake8-bugbear

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.9.0
    hooks:
      - id: mypy
        args: [--strict, --ignore-missing-imports]
        additional_dependencies:
          - types-pytz
          - pandas-stubs
          - numpy

  - repo: https://github.com/pycqa/bandit
    rev: 1.7.7
    hooks:
      - id: bandit
        args: [-r, src/, -f, json, -o, bandit-report.json]
        exclude: tests/

  - repo: local
    hooks:
      - id: pytest-check
        name: pytest-check
        entry: pytest
        language: system
        pass_filenames: false
        always_run: true
        args: [--cov=src/unity_wheel, --cov-fail-under=80]
        
      # Autonomous system checks
      - id: system-diagnostics
        name: Run system diagnostics
        entry: python run_aligned.py --diagnose --format json
        language: system
        pass_filenames: false
        stages: [push]
        
      - id: validate-config
        name: Validate configuration
        entry: python -c "from src.config import get_config_loader; get_config_loader()"
        language: system
        pass_filenames: false
        
      - id: check-feature-flags
        name: Check feature flags health
        entry: python -c "from unity_wheel.utils import get_feature_flags; f = get_feature_flags(); r = f.get_status_report(); exit(1 if r['summary']['degraded'] > 0 else 0)"
        language: system
        pass_filenames: false
        
      - id: version-check
        name: Verify version consistency
        entry: python -c "from unity_wheel import __version__; print(f'Version: {__version__}')"
        language: system
        pass_filenames: false