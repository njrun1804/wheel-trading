# Project-wide secrets & paths
# Uncomment the following line if you have global secrets
# env_chain ~/.global_secrets

# GitHub integration
export GITHUB_TOKEN="${GITHUB_TOKEN:-}"

# API Keys
export BRAVE_API_KEY="${BRAVE_API_KEY:-}"
export DATABENTO_API_KEY="${DATABENTO_API_KEY:-}"
export FRED_API_KEY="${FRED_API_KEY:-}"

# Database paths
export DUCKDB_PATH="$PWD/data/cache/wheel_cache.duckdb"
export WHEEL_TRADING_DB="$PWD/data/wheel_trading_master.duckdb"

# OpenTelemetry configuration
export OTEL_EXPORTER_OTLP_ENDPOINT="http://127.0.0.1:4318"
export OTEL_BSP_MAX_EXPORT_BATCH_SIZE="256"
export OTEL_SERVICE_NAME="wheel-trading"

# Claude Code optimization settings - Balanced for orchestrator use
export CLAUDE_CODE_THINKING_BUDGET_TOKENS="50000"   # Prevents timeouts
export CLAUDE_CODE_MAX_OUTPUT_TOKENS="8192"        # Prevents truncation
export CLAUDE_CODE_MAX_CONTEXT_TOKENS="100000"     # Good performance
export CLAUDE_CODE_PARALLELISM="8"

# Python optimization
export PYTHONUNBUFFERED="1"
export PYTHONDONTWRITEBYTECODE="1"
export PYTHONPATH="$PWD:$PYTHONPATH"

# MCP configuration
export MCP_CONFIG="$PWD/mcp-servers.json"
export MCP_ROOT="$PWD"
export MCP_PERFORMANCE_MODE="true"

# Node.js optimization for NPX servers (2GB for 24GB system)
export NODE_OPTIONS="--max-old-space-size=2048"

# M4 Mac optimization
export OBJC_DISABLE_INITIALIZE_FORK_SAFETY="YES"

# Project-specific paths
export PROJECT_ROOT="$PWD"
export LOG_DIR="$PWD/logs"
export CACHE_DIR="$PWD/data/cache"

# Create necessary directories
mkdir -p "$LOG_DIR" "$CACHE_DIR"

# Logging
export LOG_LEVEL="${LOG_LEVEL:-INFO}"

echo "âœ“ Environment loaded for wheel-trading project"
# JAX Metal GPU acceleration
export JAX_PLATFORM_NAME="METAL"
export JAX_ENABLE_X64="True"
