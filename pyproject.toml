[tool.poetry]
name = "unity-wheel-bot"
version = "0.1.0"
description = "Sophisticated options wheel trading system optimized for autonomous operation"
authors = ["Claude Code <noreply@anthropic.com>"]
readme = "README.md"
packages = [{include = "unity_wheel", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
numpy = ">=1.24.0"
scipy = ">=1.11.0"
pandas = ">=2.0.0"
pydantic = "2.7.0"
python-dotenv = "1.0.1"
pytz = "2024.1"
click = "8.1.7"
rich = "13.7.1"
aiohttp = "3.10.11"
cryptography = ">=41.0.0"
pyyaml = "6.0.2"
pydantic-settings = "2.6.1"
duckdb = { version = "^1.0.0", optional = true }
scikit-learn = { version = "1.5.1", optional = true }
google-cloud-secret-manager = { version = "2.20.2", optional = true }
tenacity = "^8.2.0"

[tool.poetry.extras]
gcp = ["google-cloud-secret-manager"]
ml = ["scikit-learn"]
storage = ["duckdb"]

[tool.poetry.group.dev.dependencies]
pytest = "8.1.1"
pytest-cov = "4.1.0"
pytest-xdist = "3.5.0"
pytest-asyncio = "0.23.0"
hypothesis = "6.98.15"
black = "24.3.0"
flake8 = "7.0.0"
isort = "5.13.2"
mypy = "1.9.0"
bandit = "1.7.7"
pre-commit = "3.6.2"
types-pytz = "2024.1.0.20240203"
pandas-stubs = "2.2.0.240218"
types-PyYAML = "6.0.12.20240917"
memory-profiler = "0.61.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | node_modules
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-v"
asyncio_default_fixture_loop_scope = "function"

[tool.mypy]
python_version = "3.9"
strict = false
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_any_unimported = false
no_implicit_optional = false
check_untyped_defs = false
warn_redundant_casts = false
warn_unused_ignores = false
warn_no_return = false
warn_unreachable = false
strict_equality = false
ignore_missing_imports = true
allow_untyped_calls = true
allow_untyped_defs = true
allow_untyped_globals = false
allow_redefinition = false

[tool.coverage.run]
source = ["src/unity_wheel"]
omit = ["*/tests/*", "*/test_*.py", "*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv", "node_modules"]
skips = ["B101", "B601", "B608"]  # B608: Skip SQL injection warnings for validated queries

[tool.ruff]
extend-exclude = [
    "src/*",
    "tests/*",
    "docs/*",
    "examples/*",
    "tools/*",
    "scripts/*",
]

[tool.poetry.scripts]
unity-wheel = "unity_wheel.main:cli"
validate = "unity_wheel.validate:main"
