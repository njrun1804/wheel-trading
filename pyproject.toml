[tool.poetry]
name = "unity-wheel"
version = "2.1.0"
description = "Personal wheel trading recommendation system"
authors = ["Mike Edwards"]
readme = "README.md"
packages = [{include = "unity_wheel", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"

[tool.poetry.scripts]
wheel-trading = "unity_wheel.cli.run:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py311']

[tool.isort]
profile = "black"
line_length = 100

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
# Enable only essential rules
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "SIM", # flake8-simplify
    "I",   # isort
]

ignore = [
    "E501",  # line too long (black handles this)
    "B008",  # do not perform function calls in argument defaults
    "SIM108", # use ternary operator (sometimes less readable)
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["F401", "F811"]  # Allow unused imports and redefinitions in tests
"scripts/python-mcp-server.py" = ["F401"]  # Allow unused imports for optional dependencies
"investigate_greek_issues.py" = ["F841"]  # Temporary analysis file
"validate_database_comprehensive.py" = ["F841", "B007"]  # Temporary validation file
"scripts/analyze_data_structure.py" = ["E722"]  # Temporary analysis file

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests that require external services",
]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
